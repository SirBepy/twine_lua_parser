window.storyFormat({
  "name": "Twine to Lua parser",
  "version": "0.0.10",
  "author": "SirBepy",
  "description": "Export your Twine 2 story as a lua file (RobloxStudio)",
  "proofing": false,
  "source": "<html>\r\n\r\n<head>\r\n  <title>{{STORY_NAME}}</title>\r\n  <script type=\"text/javascript\">\r\n    var{keys:a}=Object,{isArray:b}=Array,c=/\\?\\((\\w+)\\s*(==|<|>)\\s*[\"']?([^\"'\\s]+)[\"']?\\)/,d=/\\$(\\w+)\\s*=\\s*(\"[^\"]+\"|\\d+)/,e=_=>_.replaceAll('&lt;','<').replaceAll('&gt;','>'),f=B=>{const C=typeof B;if(B==null)return null;if(b(B)){const _a=B.map(f).join(', ');return`{${_a}}`}switch(C) {case 'number':case 'boolean':return`${B}`;case 'string':return JSON.stringify(B);case 'object':{const D=Object.entries(B).map(([_A,_b])=>`${_A} = ${f(_b)}`).join(', ');return`{${D}}`}default:throw Error(`Unsupported data type: ${C}`)}},g=E=>`return ${f(E)}`,h=aA=>{const _B=aA.match(c);if(!_B)return;let[,_c,_d,_e]=_B;switch(_d) {case '==':_d='eq';break;case '>':_d='gt';_e=parseFloat(_e);break;case '<':_d='lt';_e=parseFloat(_e);break}return{varName:_c,comparator:_d,value:_e}},A=aB=>{const aC=aB.replace(/^!*\\[\\[|\\]\\]!*$/g,''),_C=aC.split('|'),_D={},_E=h(_C[0]);_C.length==1&&(_D.link=_C[0]);_E&&(_D.condition=_E);if(_C.length==2){_D.link=_C[1];!_E&&(_D.text=_C[0])}else _C.length==3&&(_D.link=_C[2],_D.text=_C[1]);_D.text?.startsWith('---')&&(_D.isEnd=!0,_D.text=_D.text.replace(/^---/,''),!_D.text&&delete _D.text);aB.startsWith('!')&&aB.endsWith('!')&&(_D.isUrgent=!0);return _D},j=aD=>{const aE=[];for(let i=aD.length-1;i>=0;i--){const aF=aD[i],aG=aF.match(/!*\\[\\[.+?\\]\\]!*/g);aG&&(aE.push(aG[0]),aD.splice(i,1))}if(!aE.length)return;return aE.map(A)},k=aH=>{const aI={};for(let i=aH.length-1;i>=0;i--){const aJ=aH[i],aK=aJ.match(d);if(aK){const[,aL,aM]=aK;aI[aL]=JSON.parse(aM);aH.splice(i,1)}}return a(aI).length>0?aI:null},l=aN=>aN.map(aO=>e(aO).trim()).filter(aP=>!!aP),m=aQ=>{const aR=h(aQ);if(!aR)return{text:aQ};return{text:aQ.replace(c,''),condition:aR}},n=aS=>{const aT=l(aS.innerHTML.split('\\n')),aU={},aV=j(aT),aW=k(aT);aV&&(aU.responses=aV.filter(aX=>!!aX.text),aU.redirects=aV.filter(aY=>!aY.text),!aU.responses.length&&delete aU.responses,!aU.redirects.length&&delete aU.redirects);aW&&(aU.props=aW);for(const aZ of ['name','tags','pid']){const bA=aS.attributes[aZ].value;bA&&(aU[aZ]=bA)}aU.tags&&(aU.tags=aU.tags.split(' '));aU.lines=l(aT).map(m);return aU},o=bB=>{const bC=Array.prototype.slice.call(bB.getElementsByTagName('tw-passagedata')).map(n),bD={passages:{},name:bB.attributes.name.value,start_node_name:bC.find(bE=>bE.pid==bB.attributes.startnode.value).name};for(const bF of bC)bD.passages[bF.name]={...bF,name:void 0, pid:void 0};return JSON.parse(JSON.stringify(bD))};window.parseTwineToLua=()=>document.getElementById('output').innerHTML=g(o(document.getElementsByTagName('tw-storydata')[0]));\r\n  </script>\r\n  <style>\r\n    body,\r\n    html {\r\n      box-sizing: border-box;\r\n      margin: 0;\r\n      padding: 0;\r\n      background-color: #365486;\r\n      color: #7FC7D9;\r\n    }\r\n\r\n    body {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n    }\r\n\r\n    #storyData {\r\n      display: none;\r\n    }\r\n\r\n    #output {\r\n      width: 500px;\r\n      height: 500px;\r\n      max-width: 80vw;\r\n      max-height: 80vh;\r\n      overflow-y: auto;\r\n      text-wrap: wrap;\r\n      opacity: 0.5;\r\n      padding: 1em;\r\n      border: #0F1035 4px solid;\r\n      border-radius: 10px;\r\n    }\r\n\r\n    button {\r\n      width: 180px;\r\n      height: 40px;\r\n      border-radius: 10px;\r\n      font-size: 1.2em;\r\n      background-color: #7FC7D9;\r\n      color: white;\r\n      border: #DCF2F1 1px solid;\r\n      transition: 0.2s;\r\n      cursor: pointer;\r\n    }\r\n\r\n    button:hover {\r\n      opacity: 0.5;\r\n    }\r\n\r\n    button:active {\r\n      opacity: 0.2;\r\n    }\r\n\r\n    button:disabled {\r\n      opacity: 1;\r\n    }\r\n  </style>\r\n</head>\r\n\r\n<body>\r\n  <button onclick=\"copyText(this)\">Copy output</button>\r\n  <pre id=\"output\"></pre>\r\n  <div id=\"storyData\">\r\n    {{STORY_DATA}}\r\n  </div>\r\n  <script>\r\n    function copyText() {\r\n      const textToCopy = document.getElementById(\"output\").innerText;\r\n      const textarea = document.createElement(\"textarea\");\r\n      textarea.value = textToCopy;\r\n\r\n      document.body.appendChild(textarea);\r\n      textarea.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(textarea);\r\n\r\n      const button = document.querySelector('button');\r\n      button.textContent = 'Copied to clipboard';\r\n      button.disabled = true\r\n\r\n      setTimeout(() => {\r\n        button.textContent = 'Copy output';\r\n        button.disabled = false\r\n      }, 1500);\r\n    }\r\n    parseTwineToLua();\r\n  </script>\r\n</body>\r\n\r\n</html>"
});