window.storyFormat({
  "name": "Twine to Lua parser",
  "version": "0.0.7",
  "author": "SirBepy",
  "description": "Export your Twine 2 story as a lua file (RobloxStudio)",
  "proofing": false,
  "source": "<html>\r\n\r\n<head>\r\n  <title>{{STORY_NAME}}</title>\r\n  <script type=\"text/javascript\">\r\n    var{keys:a}=Object,{isArray:b}=Array,c=A=>{const _=typeof A;if(A==null)return null;if(b(A)){const B=A.map(c).join(', ');return`{${B}}`}switch(_) {case 'number':case 'boolean':return`${A}`;case 'string':return JSON.stringify(A).replace(/\\\\n\\s+/g,'\\\\n').replace(/\\s+\\\\n/g,'\\\\n');case 'object':{const C=Object.entries(A).map(([_a,_b])=>`${_a} = ${c(_b)}`).join(', ');return`{${C}}`}default:throw Error(`Unsupported data type: ${_}`)}},d=D=>`return ${c(D)}`,e=_A=>{const _B=_A.replace(/^\\[+|\\]+$/g,''),[_c,_d]=_B.split('|'),E={response:_c.replace(/^---\\s*/,''),link:_d??_c};_c.startsWith('---')&&(E.isEnd=!0);return E},f=aA=>{const aB=aA.text,_C=aB.match(/\\[\\[.+?\\]\\]/g);if(!_C)return null;aA.text=aA.text.replace(/\\[\\[.*?\\]\\]/g,'');return _C.map(e)},g=aC=>{const aD={};aC.text=aC.text.replace(/\\$(\\w+)\\s*=\\s*(\"[^\"]+\"|\\d+)/g,(aE,aF,aG)=>{aD[aF]=JSON.parse(aG);return''});aC.text=aC.text.trim();return a(aD).length>0?aD:null},h=aH=>{const aI={text:aH.innerHTML},aJ=f(aI),_D=g(aI);aJ&&(aI.responses=aJ);_D&&(aI.props=_D);for(const aK of ['name','tags','pid']){const aL=aH.attributes[aK].value;aL&&(aI[aK]=aL)}aI.tags&&(aI.tags=aI.tags.split(' '));aI.text=aI.text.replace(/\\s+$/g,'');return aI},i=aM=>{const aN=Array.prototype.slice.call(aM.getElementsByTagName('tw-passagedata')).map(h),aO={passages:{},name:aM.attributes.name.value,start_node_name:aN.find(aP=>aP.pid==aM.attributes.startnode.value).name};for(const aQ of aN)aO.passages[aQ.name]={...aQ,name:void 0, pid:void 0};return JSON.parse(JSON.stringify(aO))};window.parseTwineToLua=()=>document.getElementById('output').innerHTML=d(i(document.getElementsByTagName('tw-storydata')[0]));\r\n  </script>\r\n  <style>\r\n    body,\r\n    html {\r\n      box-sizing: border-box;\r\n      margin: 0;\r\n      padding: 0;\r\n      background-color: #365486;\r\n      color: #7FC7D9;\r\n    }\r\n\r\n    body {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n    }\r\n\r\n    #storyData {\r\n      display: none;\r\n    }\r\n\r\n    #output {\r\n      width: 500px;\r\n      height: 500px;\r\n      max-width: 80vw;\r\n      max-height: 80vh;\r\n      overflow-y: auto;\r\n      text-wrap: wrap;\r\n      opacity: 0.5;\r\n      padding: 1em;\r\n      border: #0F1035 4px solid;\r\n      border-radius: 10px;\r\n    }\r\n\r\n    button {\r\n      width: 180px;\r\n      height: 40px;\r\n      border-radius: 10px;\r\n      font-size: 1.2em;\r\n      background-color: #7FC7D9;\r\n      color: white;\r\n      border: #DCF2F1 1px solid;\r\n      transition: 0.2s;\r\n      cursor: pointer;\r\n    }\r\n\r\n    button:hover {\r\n      opacity: 0.5;\r\n    }\r\n\r\n    button:active {\r\n      opacity: 0.2;\r\n    }\r\n\r\n    button:disabled {\r\n      opacity: 1;\r\n    }\r\n  </style>\r\n</head>\r\n\r\n<body>\r\n  <button onclick=\"copyText(this)\">Copy output</button>\r\n  <pre id=\"output\"></pre>\r\n  <div id=\"storyData\">\r\n    {{STORY_DATA}}\r\n  </div>\r\n  <script>\r\n    function copyText() {\r\n      const textToCopy = document.getElementById(\"output\").innerText;\r\n      const textarea = document.createElement(\"textarea\");\r\n      textarea.value = textToCopy;\r\n\r\n      document.body.appendChild(textarea);\r\n      textarea.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(textarea);\r\n\r\n      const button = document.querySelector('button');\r\n      button.textContent = 'Copied to clipboard';\r\n      button.disabled = true\r\n\r\n      setTimeout(() => {\r\n        button.textContent = 'Copy output';\r\n        button.disabled = false\r\n      }, 1500);\r\n    }\r\n    parseTwineToLua();\r\n  </script>\r\n</body>\r\n\r\n</html>"
});